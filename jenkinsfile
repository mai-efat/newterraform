pipeline {
    agent any

    stages {
        stage('Git Clone') {
            steps {
                script {
                    // Clone the Git repository
                    git branch: 'main', url: 'https://github.com/mai-efat/newterraform.git'
                }
            }
        }

        stage('Terraform Init') {
            steps {
                script {
                    // Initialize Terraform
                    withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh 'terraform init'  // Initialize Terraform
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    // Generate Terraform execution plan
                    withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh 'terraform plan'  // Show the execution plan
                    }
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    // Apply Terraform changes
                    withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh 'terraform apply -auto-approve'  // Apply the Terraform plan automatically
                    }
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                script {
                    // Run the Ansible playbook using SSH credentials
                    withCredentials([sshUserPrivateKey(credentialsId: 'agent', 
                                                       keyFileVariable: 'private-key', 
                                                       passphraseVariable: 'password', 
                                                       usernameVariable: 'username')]) {
                       
                        // Ensure correct permissions for private key
                        sh 'chmod 600 ${private-key}'  // Set proper permissions for the private key

                        // Run Ansible playbook with the private key and user credentials
                        sh """
                            ansible-playbook -i inventory_file -u ${username} --private-key ${private-key} playbook.yml
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()  // Clean up the workspace after execution
        }
    }
}
